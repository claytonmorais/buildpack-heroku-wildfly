#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
BIN_DIR=$BP_DIR/bin

WILDFLY_SERVER_VERSION="10.1.0.Final"

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-"https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz"}

mkdir -p /tmp/jvm-common

curl --retry 3 --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java

install_java_with_overlay ${BUILD_DIR}


WILDFLY_HOME=".wildfly/wildfly-${WILDFLY_SERVER_VERSION}"

cd $BUILD_DIR

mkdir -p .wildfly

echo -n "==> Instalando o Wildfly ${WILDFLY_SERVER_VERSION}... "

curl -O http://download.jboss.org/wildfly/${WILDFLY_SERVER_VERSION}/wildfly-${WILDFLY_SERVER_VERSION}.zip

echo "download efetuado"


unzip -l wildfly-$WILDFLY_SERVER_VERSION.zip

echo "extraido"

mv wildfly-$WILDFLY_SERVER_VERSION $WILDFLY_HOME

echo "removido"

rm wildfly-$WILDFLY_SERVER_VERSION.zip

echo "pacote extraido ocm sucesso"

echo -n "==> Deploying ear... "
cp target/*.ear $WILDFLY_HOME/standalone/deployments/
echo "done"

echo "==> Configurando o servidor..."

if [ -f $BUILD_DIR/Procfile ]; then
  echo "        - Using existing process types"
else
  cat << EOF > $BUILD_DIR/Procfile
web: \$WILDFLY_HOME/bin/standalone.sh -b=0.0.0.0 -Djboss.http.port=\$PORT
EOF
fi

cat << EOF > $BUILD_DIR/.profile.d/jboss.sh
export WILDFLY_HOME=${WILDFLY_HOME}
EOF
